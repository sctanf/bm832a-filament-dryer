/dts-v1/;
#include <nordic/nrf52810_qfaa.dtsi>
#include "bm832_dryer-pinctrl.dtsi"

/ {
	model = "Custom Board auto generated by nRF Connect for VS Code";
	compatible = "sctanf,bm832-dryer";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
	};

	zephyr,user {
		io-channels = <&adc 0>,
			<&adc 1>,
			<&adc 2>,
			<&adc 3>;
		pwms = <&pwm0 0 PWM_KHZ(25) PWM_POLARITY_NORMAL>,
			<&pwm0 1 PWM_KHZ(25) PWM_POLARITY_NORMAL>,
			<&pwm0 2 PWM_KHZ(25) PWM_POLARITY_NORMAL>,
			<&sw_pwm 0 PWM_HZ(100) PWM_POLARITY_NORMAL>,
			<&sw_pwm 1 PWM_HZ(100) PWM_POLARITY_NORMAL>;
		tachometer-gpios = <&gpio0 10 GPIO_PULL_UP>,
			<&gpio0 8 GPIO_PULL_UP>,
			<&gpio0 9 GPIO_PULL_UP>,
			<&gpio0 6 GPIO_PULL_UP>,
			<&gpio0 7 GPIO_PULL_UP>;
	};
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 DT_SIZE_K(48)>;
		};

		slot0_partition: partition@c000 {
			label = "image-0";
			reg = <0x0000c000 DT_SIZE_K(56)>;
		};

		slot1_partition: partition@1a000 {
			label = "image-1";
			reg = <0x0001a000 DT_SIZE_K(56)>;
		};

		storage_partition: partition@28000 {
			label = "storage";
			reg = <0x00028000 DT_SIZE_K(32)>;
		};
	};
};

&reg {
	regulator-initial-mode = <NRF5X_REG_MODE_DCDC>;
};

&adc {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	channel@0 {
		reg = <0>;
		zephyr,gain = "ADC_GAIN_1_5";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,input-positive = <NRF_SAADC_AIN0>;
		zephyr,resolution = <14>;
		zephyr,oversampling = <8>;
	};

	channel@1 {
		reg = <1>;
		zephyr,gain = "ADC_GAIN_1_5";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,input-positive = <NRF_SAADC_AIN1>;
		zephyr,resolution = <14>;
		zephyr,oversampling = <8>;
	};

	channel@2 {
		reg = <2>;
		zephyr,gain = "ADC_GAIN_1_5";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,input-positive = <NRF_SAADC_AIN2>;
		zephyr,resolution = <14>;
		zephyr,oversampling = <8>;
	};

	channel@3 {
		reg = <3>;
		zephyr,gain = "ADC_GAIN_1_5";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,input-positive = <NRF_SAADC_AIN3>;
		zephyr,resolution = <14>;
		zephyr,oversampling = <8>;
	};
};

&gpio0 {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&i2c0 {
	compatible = "nordic,nrf-twim";
	status = "okay";
	clock-frequency = <I2C_BITRATE_FAST>;
	pinctrl-0 = <&i2c0_default>;
	pinctrl-1 = <&i2c0_sleep>;
	pinctrl-names = "default", "sleep";

	sht4x@44 {
		status = "okay";
		compatible = "sensirion,sht4x";
		reg = <0x44>;
		repeatability = <2>;
	};
};

&pwm0 {
	status = "okay";
	pinctrl-0 = <&pwm0_default>;
	pinctrl-1 = <&pwm0_sleep>;
	pinctrl-names = "default", "sleep";
};

&sw_pwm {
	status = "okay";
	channel-gpios = <&gpio0 14 PWM_POLARITY_NORMAL>,
		<&gpio0 20 PWM_POLARITY_NORMAL>;
};
